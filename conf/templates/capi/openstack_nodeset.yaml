{{- $ClusterName := .Cluster.Name -}}
{{- $Namespace := .Cluster.Namespace -}}
{{- $FailureDomain := .Openstack.FailureDomain -}}
{{- $KubernetesVersion := .K8s.VersionName -}}
{{- $OpenstackCloud := .Openstack.Cloud -}}
{{- $OpenstackImageName := .Openstack.ImageName -}}
{{- $OpenstackSSHKeyName := .Openstack.SSHKeyName -}}
{{- $OpenstackProviderConfB64 := .Openstack.ProviderConfB64 -}}
{{- $OpenstackCACertB64 := .Openstack.CACertB64 -}}
{{- $OpenstackLocalHostName := .Openstack.LocalHostName -}}
{{- $OpenstackInstanceId := .Openstack.InstanceId -}}
{{- $OpenstackCloudControllerManagerRoles := .Openstack.CloudControllerManagerRoles -}}
{{- $OpenstackCloudControllerManagerRoleBindings := .Openstack.CloudControllerManagerRoleBindings -}}
{{- $OpenstackPpenstackCloudControllerManagerDS := .Openstack.PpenstackCloudControllerManagerDS -}}
{{- range .Nodes.WorkerSets -}}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: {{$ClusterName}}-{{.Name}}
  namespace: {{or $Namespace "default"}}
spec:
  template:
    spec:
      files:
        - content: {{$OpenstackCACertB64}}
          encoding: base64
          owner: root
          path: /etc/certs/cacert
          permissions: "0600"
        - path: /etc/containerd/config.toml
          content: |
            version = 2
            imports = ["/etc/containerd/conf.d/*.toml"]
            [plugins]
              [plugins."io.containerd.grpc.v1.cri"]
                sandbox_image = "registry.k8s.io/pause:3.9"
              [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
                runtime_type = "io.containerd.runc.v2"
              [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
                SystemdCgroup = true
                [plugins."io.containerd.grpc.v1.cri".registry]
                  config_path = "/etc/containerd/certs.d"
        - path: /etc/containerd/certs.d/192.168.88.206/hosts.toml
          content: |
            server = "https://192.168.88.206"

            [host."https://192.168.88.206"]
              ca = "/etc/docker/certs.d/192.168.88.206/ca.crt"
        - path: /etc/containerd/certs.d/docker.io/hosts.toml
          content: |
            server = "https://docker.io"

            [host."https://192.168.88.206/v2/docker.io/"]
              capabilities = ["pull", "resolve"]
              ca = "/etc/docker/certs.d/192.168.88.206/ca.crt"
              override_path = true
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: external
            provider-id: openstack:///'{{ $OpenstackInstanceId }}'
          name: "{{ $OpenstackLocalHostName }}"
      preKubeadmCommands:
        - mkdir -p /etc/docker/certs.d/192.168.88.206
        - curl -Lk https://192.168.88.206/api/v2.0/systeminfo/getcert -o /etc/docker/certs.d/192.168.88.206/ca.crt
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha6
kind: OpenStackMachineTemplate
metadata:
  name: {{$ClusterName}}-{{.Name}}
  namespace: {{or $Namespace "default"}}
spec:
  template:
    spec:
      cloudName: {{$OpenstackCloud}}
      flavor: {{.Flavor}}
      identityRef:
        kind: Secret
        name: {{$ClusterName}}-cloud-config
      image: {{$OpenstackImageName}}
      sshKeyName: {{$OpenstackSSHKeyName}}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: {{$ClusterName}}-{{.Name}}
  namespace: {{or $Namespace "default"}}
spec:
  clusterName: {{$ClusterName}}
  replicas: {{.NodeCount}}
  selector:
    matchLabels: null
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          name: {{$ClusterName}}-{{.Name}}
      clusterName: {{$ClusterName}}
      failureDomain: {{or $FailureDomain "nova"}}
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha6
        kind: OpenStackMachineTemplate
        name: {{$ClusterName}}-{{.Name}}
      version: v{{$KubernetesVersion}}
{{end}}