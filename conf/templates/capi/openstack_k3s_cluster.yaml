{{$ClusterName := .Cluster.Name -}}
{{$Namespace := .Cluster.Namespace -}}
{{$FailureDomain := .Openstack.FailureDomain -}}
{{$KubernetesVersion := .K8s.VersionName -}}
{{$OpenstackCloud := .Openstack.Cloud -}}
{{$OpenstackImageName := .Openstack.ImageName -}}
{{$OpenstackSSHKeyName := .Openstack.SSHKeyName -}}
{{$OpenstackProviderConfB64 := .Openstack.ProviderConfB64 -}}
{{$OpenstackCACertB64 := .Openstack.CACertB64 -}}
{{$OpenstackLocalHostName := .Openstack.LocalHostName -}}
{{$NodeName := "{{ ds.meta_data.local_hostname }}" -}}
apiVersion: v1
data:
  cacert: {{$OpenstackCACertB64}}
  clouds.yaml: {{.Openstack.YamlB64}}
kind: Secret
metadata:
  labels:
    clusterctl.cluster.x-k8s.io/move: "true"
  name: {{$ClusterName}}-cloud-config
  namespace: {{or $Namespace "default"}}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha5
kind: OpenStackMachineTemplate
metadata:
  name: {{$ClusterName}}-{{(index .Nodes.MasterSets 0).Name}}
  namespace: {{or $Namespace "default"}}
spec:
  template:
    spec:
      securityGroups:
        - name: edgecraft-nodeport
      cloudName: {{$OpenstackCloud}}
      flavor: {{(index .Nodes.MasterSets 0).Flavor}}
      identityRef:
        kind: Secret
        name: {{$ClusterName}}-cloud-config
      image: {{$OpenstackImageName}}
      sshKeyName: {{$OpenstackSSHKeyName}}
---
{{range .Nodes.WorkerSets -}}
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KThreesConfigTemplate
metadata:
  name: {{$ClusterName}}-{{.Name}}
  namespace: {{or $Namespace "default"}}
spec:
  template:
    spec:
      agentConfig:
        nodeName: "{{$NodeName}}"
      files:
        - content: {{$OpenstackCACertB64}}
          encoding: base64
          owner: root
          path: /etc/certs/cacert
          permissions: "0600"
        - path: /etc/rancher/k3s/registries.yaml
          content: |
            mirrors:
              docker.io:
                endpoint:
                  - "https://192.168.88.206"
            configs:
              "192.168.88.206":
                tls:
                  ca_file: /etc/docker/certs.d/192.168.88.206/ca.crt
      PreK3sCommands:
        - mkdir -p /etc/docker/certs.d/192.168.88.206
        - curl -Lk https://192.168.88.206/api/v2.0/systeminfo/getcert -o /etc/docker/certs.d/192.168.88.206/ca.crt
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha5
kind: OpenStackMachineTemplate
metadata:
  name: {{$ClusterName}}-{{.Name}}
  namespace: {{or $Namespace "default"}}
spec:
  template:
    spec:
      cloudName: {{$OpenstackCloud}}
      flavor: {{.Flavor}}
      identityRef:
        kind: Secret
        name: {{$ClusterName}}-cloud-config
      image: {{$OpenstackImageName}}
      sshKeyName: {{$OpenstackSSHKeyName}}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: {{$ClusterName}}-{{.Name}}
  namespace: {{or $Namespace "default"}}
spec:
  clusterName: {{$ClusterName}}
  replicas: {{.NodeCount}}
  selector:
    matchLabels: null
  template:
    spec:
      clusterName: {{$ClusterName}}
      failureDomain: {{or $FailureDomain "nova"}}
      version: v{{$KubernetesVersion}}
      bootstrap:
        configRef:
          name: {{$ClusterName}}-{{.Name}}
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KThreesConfigTemplate
      infrastructureRef:
        name: {{$ClusterName}}-{{.Name}}
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha5
        kind: OpenStackMachineTemplate
---
{{- end}}
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KThreesControlPlane
metadata:
  name: {{$ClusterName}}-{{(index .Nodes.MasterSets 0).Name}}
  namespace: {{or $Namespace "default"}}
spec:
  infrastructureTemplate:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha5
    kind: OpenStackMachineTemplate
    name: {{$ClusterName}}-{{(index .Nodes.MasterSets 0).Name}}
  kthreesConfigSpec:
    serverConfig:
        disableComponents:
        - servicelb # not needed since we're using Infrastructure providers ex. load balancer (ccm: external)
        - traefik
        - flannel
    agentConfig:
        nodeName: "{{$NodeName}}"
    files:
      - content: {{$OpenstackProviderConfB64}}
        encoding: base64
        owner: root
        path: /etc/kubernetes/cloud.conf
        permissions: "0644" # reading permission to other users
      - content: {{$OpenstackCACertB64}}
        encoding: base64
        owner: root
        path: /etc/certs/cacert
        permissions: "0600"
        - path: /etc/rancher/k3s/registries.yaml
          content: |
            mirrors:
              docker.io:
                endpoint:
                  - "https://192.168.88.206"
            configs:
              "192.168.88.206":
                tls:
                  ca_file: /etc/docker/certs.d/192.168.88.206/ca.crt
    PreK3sCommands:
      - mkdir -p /etc/docker/certs.d/192.168.88.206
      - curl -Lk https://192.168.88.206/api/v2.0/systeminfo/getcert -o /etc/docker/certs.d/192.168.88.206/ca.crt
  replicas: {{(index .Nodes.MasterSets 0).NodeCount}}
  version: v{{$KubernetesVersion}}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha5
kind: OpenStackCluster
metadata:
  name: {{$ClusterName}}
  namespace: {{or $Namespace "default"}}
spec:
  apiServerLoadBalancer:
    enabled: {{.Nodes.UseLoadbalancer}}
  cloudName: {{$OpenstackCloud}}
  dnsNameservers:
    - {{.Openstack.DNSNameServers}}
  externalNetworkId: {{or .Openstack.ExternalNetworkID "public"}}
  identityRef:
    kind: Secret
    name: {{$ClusterName}}-cloud-config
  managedSecurityGroups: true
  nodeCidr: {{.Openstack.NodeCidr}}
  {{- if ne "" .Openstack.APIServerFloatingIP -}}
  apiServerFloatingIP: {{.Openstack.APIServerFloatingIP}}
  {{- end}}
  allowAllInClusterTraffic: true
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: {{$ClusterName}}
  namespace: {{or $Namespace "default"}}
  labels:
    ccm: external # labels for ccm
    cni: calico # labels for cni
    csiNfsChart: enabled
    dashboardChart: enabled
    veleroChart: enabled
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
        - {{.K8s.PodCidr}}
    {{if ne "" .K8s.SvcCidr -}}
    services:
      cidrBlocks:
        - {{.K8s.SvcCidr}}
    {{end -}}
    serviceDomain: {{or .K8s.SvcDomain "cluster.local"}}
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha5
    kind: OpenStackCluster
    name: {{$ClusterName}}
  controlPlaneRef:
    kind: KThreesControlPlane
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    name: {{$ClusterName}}-{{(index .Nodes.MasterSets 0).Name}}
