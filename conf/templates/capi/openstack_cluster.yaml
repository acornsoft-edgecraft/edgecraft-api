{{$ClusterName := .Cluster.Name -}}
{{$Namespace := .Cluster.Namespace -}}
{{$FailureDomain := .Openstack.FailureDomain -}}
{{$KubernetesVersion := .K8s.VersionName -}}
{{$OpenstackCloud := .Openstack.Cloud -}}
{{$OpenstackImageName := .Openstack.ImageName -}}
{{$OpenstackSSHKeyName := .Openstack.SSHKeyName -}}
{{$OpenstackProviderConfB64 := .Openstack.ProviderConfB64 -}}
{{$OpenstackCACertB64 := .Openstack.CACertB64 -}}
{{$OpenstackLocalHostName := .Openstack.LocalHostName -}}
{{$OpenstackInstanceId := .Openstack.InstanceId -}}
{{$OpenstackCloudControllerManagerRoles := .Openstack.CloudControllerManagerRoles -}}
{{$OpenstackCloudControllerManagerRoleBindings := .Openstack.CloudControllerManagerRoleBindings -}}
{{$OpenstackPpenstackCloudControllerManagerDS := .Openstack.PpenstackCloudControllerManagerDS -}}
apiVersion: v1
data:
  cacert: {{$OpenstackCACertB64}}
  clouds.yaml: {{.Openstack.YamlB64}}
kind: Secret
metadata:
  labels:
    clusterctl.cluster.x-k8s.io/move: "true"
  name: {{$ClusterName}}-cloud-config
  namespace: {{or $Namespace "default"}}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha6
kind: OpenStackMachineTemplate
metadata:
  name: {{$ClusterName}}-{{(index .Nodes.MasterSets 0).Name}}
  namespace: {{or $Namespace "default"}}
spec:
  template:
    spec:
      cloudName: {{$OpenstackCloud}}
      flavor: {{(index .Nodes.MasterSets 0).Flavor}}
      identityRef:
        kind: Secret
        name: {{$ClusterName}}-cloud-config
      image: {{$OpenstackImageName}}
      sshKeyName: {{$OpenstackSSHKeyName}}
---
{{range .Nodes.WorkerSets -}}
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: {{$ClusterName}}-{{.Name}}
  namespace: {{or $Namespace "default"}}
spec:
  template:
    spec:
      files:
      - content: {{$OpenstackCACertB64}}
        encoding: base64
        owner: root
        path: /etc/certs/cacert
        permissions: "0600"
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: external
            provider-id: openstack:///'{{ $OpenstackInstanceId }}'
          name: "{{ $OpenstackLocalHostName }}"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha6
kind: OpenStackMachineTemplate
metadata:
  name: {{$ClusterName}}-{{.Name}}
  namespace: {{or $Namespace "default"}}
spec:
  template:
    spec:
      cloudName: {{$OpenstackCloud}}
      flavor: {{.Flavor}}
      identityRef:
        kind: Secret
        name: {{$ClusterName}}-cloud-config
      image: {{$OpenstackImageName}}
      sshKeyName: {{$OpenstackSSHKeyName}}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: {{$ClusterName}}-{{.Name}}
  namespace: {{or $Namespace "default"}}
spec:
  clusterName: {{$ClusterName}}
  replicas: {{.NodeCount}}
  selector:
    matchLabels: null
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          name: {{$ClusterName}}-{{.Name}}
      clusterName: {{$ClusterName}}
      failureDomain: {{or $FailureDomain "nova"}}
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha6
        kind: OpenStackMachineTemplate
        name: {{$ClusterName}}-{{.Name}}
      version: v{{$KubernetesVersion}}
---
{{end}}
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  name: {{$ClusterName}}-{{(index .Nodes.MasterSets 0).Name}}
  namespace: {{or $Namespace "default"}}
spec:
  kubeadmConfigSpec:
    clusterConfiguration:
      {{if eq true .EtcdStorage.Etcd.UseExternalEtcd}}
      etcd:
        external:"defaul"
          endpoints:
          {{with .EtcdStorage.Etcd.Endpoints}}
            {{ range . }}
            - https://{{.}} # - https://10.0.0.230:2379
            {{ end}}
          {{end}}
          caFile: {{.EtcdStorage.Etcd.CAFile}} # /etc/kubernetes/pki/etcd/ca.crt
          certFile: {{.EtcdStorage.Etcd.CertFile}} # /etc/kubernetes/pki/apiserver-etcd-client.crt
          keyFile: {{.EtcdStorage.Etcd.KeyFile}} # /etc/kubernetes/pki/apiserver-etcd-client.key
      {{end -}}  
      apiServer:
        extraArgs:
          cloud-provider: external
      controllerManager:
        extraArgs:
          cloud-provider: external
    files:
    - content: {{$OpenstackCloudControllerManagerRoles}}
      encoding: base64
      owner: root
      path: /etc/kubernetes/addon/openstack/cloud-controller-manager-roles.yaml
      permissions: "0600"
    - content: {{$OpenstackCloudControllerManagerRoleBindings}}
      encoding: base64
      owner: root
      path: /etc/kubernetes/addon/openstack/cloud-controller-manager-role-bindings.yaml
      permissions: "0600"
    - content: {{$OpenstackPpenstackCloudControllerManagerDS}}
      encoding: base64
      owner: root
      path: /etc/kubernetes/addon/openstack/openstack-cloud-controller-manager-ds.yaml
      permissions: "0600"
    - content: {{$OpenstackProviderConfB64}}
      encoding: base64
      owner: root
      path: /etc/kubernetes/cloud.conf
      permissions: "0600"
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: openstack:///'{{ $OpenstackInstanceId }}'
        name: "{{ $OpenstackLocalHostName }}"
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: openstack:///'{{ $OpenstackInstanceId }}'
        name: "{{ $OpenstackLocalHostName }}"
    # calico preinstall, notice if closed cloud environment
    postKubeadmCommands:
      - kubectl --kubeconfig=/etc/kubernetes/admin.conf create secret -n kube-system generic cloud-config --from-file=/etc/kubernetes/cloud.conf
      - kubectl --kubeconfig=/etc/kubernetes/admin.conf apply -f /etc/kubernetes/addon/openstack/cloud-controller-manager-roles.yaml
      - kubectl --kubeconfig=/etc/kubernetes/admin.conf apply -f /etc/kubernetes/addon/openstack/cloud-controller-manager-role-bindings.yaml
      - kubectl --kubeconfig=/etc/kubernetes/admin.conf apply -f /etc/kubernetes/addon/openstack/openstack-cloud-controller-manager-ds.yaml
      {{ .K8s.MasterExtraConfig.PostKubeadmCommands }}
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1alpha6
      kind: OpenStackMachineTemplate
      name: {{$ClusterName}}-{{(index .Nodes.MasterSets 0).Name}}
  replicas: {{(index .Nodes.MasterSets 0).NodeCount}}
  version: v{{$KubernetesVersion}}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha6
kind: OpenStackCluster
metadata:
  name: {{$ClusterName}}
  namespace: {{or $Namespace "default"}}
spec:
  {{if eq true .Openstack.UseBastionHost}}
  bastion:
    enabled: true
    instance:
      flavor: {{.Openstack.BastionFlavor }}
      image:  {{.Openstack.BastionImageName }}
      sshKeyName: {{.Openstack.BastionSSHKeyName }}
      {{if ne "" .Openstack.BastionFloatingIP}}
      floatingIP: {{.Openstack.BastionFloatingIP}}
      {{end}}
  {{end -}}
  apiServerLoadBalancer:
    enabled: {{.Nodes.UseLoadbalancer}}
  cloudName: {{$OpenstackCloud}}
  dnsNameservers:
    - {{.Openstack.DNSNameServers}}
  externalNetworkId: {{or .Openstack.ExternalNetworkID "396da06f-3577-4e5c-9bda-b7400b917282"}}
  identityRef:
    kind: Secret
    name: {{$ClusterName}}-cloud-config
  managedSecurityGroups: true
  nodeCidr: {{.Openstack.NodeCidr}}
  {{if ne "" .Openstack.APIServerFloatingIP}}
  apiServerFloatingIP: {{.Openstack.APIServerFloatingIP}}
  {{end}}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: {{$ClusterName}}
  namespace: {{or $Namespace "default"}}
  labels:
    csiNfsChart: enabled
    dashboardChart: enabled
    veleroChart: enabled
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
        - {{.K8s.PodCidr}}
    {{if ne "" .K8s.SvcCidr -}}
    services:
      cidrBlocks:
        - {{.K8s.SvcCidr}}
    {{end -}}
    serviceDomain: {{or .K8s.SvcDomain "cluster.local"}}
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    name: {{$ClusterName}}-{{(index .Nodes.MasterSets 0).Name}}
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha6
    kind: OpenStackCluster
    name: {{$ClusterName}}