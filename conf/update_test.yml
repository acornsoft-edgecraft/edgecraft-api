apiVersion: infrastructure.cluster.x-k8s.io/v1alpha5
kind: OpenStackMachineTemplate
metadata:
  name: os-ka-upd-m-v1-24-5
  namespace: default
spec:
  template:
    spec:
      cloudName: openstack
      flavor: m1.medium
      identityRef:
        kind: Secret
        name: os-ka-upd-cloud-config
      image: ubuntu-2004-kube-v1.24.5
      sshKeyName: sunmi
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  name: os-ka-upd-m
  namespace: default
spec:
  kubeadmConfigSpec:
    clusterConfiguration:
      apiServer:
        extraArgs:
          cloud-config: /etc/kubernetes/cloud.conf
          cloud-provider: openstack
        extraVolumes:
          - hostPath: /etc/kubernetes/cloud.conf
            mountPath: /etc/kubernetes/cloud.conf
            name: cloud
            readOnly: true
      controllerManager:
        extraArgs:
          cloud-config: /etc/kubernetes/cloud.conf
          cloud-provider: openstack
        extraVolumes:
          - hostPath: /etc/kubernetes/cloud.conf
            mountPath: /etc/kubernetes/cloud.conf
            name: cloud
            readOnly: true
          - hostPath: /etc/certs/cacert
            mountPath: /etc/certs/cacert
            name: cacerts
            readOnly: true
      imageRepository: k8s.gcr.io
    files:
      - content: W0dsb2JhbF0KYXV0aC11cmw9aHR0cDovLzE5Mi4xNjguNzcuMTEvaWRlbnRpdHkKdXNlcm5hbWU9InN1bm1pIgpwYXNzd29yZD0iZmtmZms0NDgiCnRlbmFudC1pZD0iNTQyZTdhMDRmNjkxNDgyOWI0M2U3N2Y5ZWYxMmI3NzkiCnRlbmFudC1uYW1lPSJlZGdlY3JhZnQiCmRvbWFpbi1uYW1lPSJEZWZhdWx0IgpyZWdpb249IlJlZ2lvbk9uZSIK
        encoding: base64
        owner: root
        path: /etc/kubernetes/cloud.conf
        permissions: "0600"
      - content: Cg==
        encoding: base64
        owner: root
        path: /etc/certs/cacert
        permissions: "0600"
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-config: /etc/kubernetes/cloud.conf
          cloud-provider: openstack
        name: "{{ local_hostname }}"
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-config: /etc/kubernetes/cloud.conf
          cloud-provider: openstack
        name: "{{ local_hostname }}"
    
    # calico preinstall, notice if closed cloud environment
    postKubeadmCommands:
      - kubectl --kubeconfig=/etc/kubernetes/admin.conf apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.24.1/manifests/calico.yaml
    
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1alpha5
      kind: OpenStackMachineTemplate
      name: os-ka-upd-m-v1-24-5
  replicas: 3
  version: v1.24.5
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha5
kind: OpenStackMachineTemplate
metadata:
  name: os-ka-upd-w-v1-24-5
  namespace: default
spec:
  template:
    spec:
      cloudName: openstack
      flavor: m1.small
      identityRef:
        kind: Secret
        name: os-ka-upd-cloud-config
      image: ubuntu-2004-kube-v1.24.5
      sshKeyName: sunmi
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: os-ka-upd-w
  namespace: default
spec:
  clusterName: os-ka-upd
  replicas: 3
  selector:
    matchLabels: null
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          name: os-ka-upd-w
      clusterName: os-ka-upd
      failureDomain: nova
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha5
        kind: OpenStackMachineTemplate
        name: os-ka-upd-w-v1-24-5
      version: v1.24.5
---